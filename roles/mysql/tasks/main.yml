- name: setting root password
  ansible.builtin.set_fact:
    ROOT_PASSWORD: "{{ lookup('aws_ssm', 'param.{{ENV}}.mysql.ROOT_PASSWORD', region='us-east-1' ) }}"

- name: copy mysql repo
  ansible.builtin.copy:
    src: mysql.repo
    dest: /etc/yum.repos.d/mysql.repo

- name: disable mysql 8 version repo
  ansible.builtin.shell: dnf module disable mysql -y

- name: install mysql server
  ansible.builtin.yum:
    name:
     - mysql-community-server
     - python3-PyMySQL
    state: installed

- name: start mysql
  ansible.builtin.systemd:
    name: mysqld
    enabled: yes
    state: restarted

- name: Get MySQL version
  community.mysql.mysql_info:
    login_user: root
    login_password: "{{ROOT_PASSWORD}}"
    filter: version
  ignore_errors: yes
  register: out


- name: default password change
  when: out.failed
  block:
    - name: copy root reset password file
      ansible.builtin.template:
       src: root-pass.sql
       dest: /tmp/root-pass.sql

    - name: Load mysql log file
      ansible.builtin.slurp:
       src: /var/log/mysqld.log
      register: mysql_log

    - name: change default password
      ansible.builtin.shell: mysql --connect-expired-password -uroot -p"{{ mysql_log['content'] | b64decode | regex_findall('temporary password.*') | join(' ') | split(' ') | last }} " </tmp/root-pass.sql

- name: get plugins list
  community.mysql.mysql_query:
    login_user: root
    login_password: "{{ROOT_PASSWORD}}"
    query: show plugins
  ignore_errors: yes
  register: out

- name: Remove validate plugin password
  community.mysql.mysql_query:
    login_user: root
    login_password: "{{ROOT_PASSWORD}}"
    query: uninstall plugin validate_password
  when: out | regex_findall('validate_password.*') | length > 0

- name: copy App User setup SQL
  ansible.builtin.template:
    src: app-user.sql
    dest: /tmp/app-user.sql

- name: create App user in DB
  ansible.builtin.shell: mysql -uroot -p"{{ ROOT_PASSWORD }}"  </tmp/app-user.sql





